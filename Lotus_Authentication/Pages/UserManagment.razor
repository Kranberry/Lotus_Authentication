@page "/UserManagement"
@inject NavigationManager NavManager
@inject UserSessionManager Session

<UserNotAuthenticated>
    <div>
        <LotusForm>
            <FormLabel For="emailInput">Email address</FormLabel>
            <FormInput @bind-Value="Email" PlaceHolder="Support@lotus.se" ID="emailInput" InputType="text"></FormInput>
            <FormLabel For="userName">Username</FormLabel>
            <FormInput @bind-Value="UserName" PlaceHolder="Username" ID="userName" InputType="text"></FormInput>
            <FormLabel For="password">Password</FormLabel>
            <FormInput @bind-Value="Password" PlaceHolder="*********" ID="password" InputType="password"></FormInput>
            <FormLabel Class="@Wiggle" Style="flex: 1; align-self: center; color: red;">[ @ErrorMessage ]</FormLabel>
            <FormInput Value="Login" InputType="submit" OnClickCallBack="@Authenticate" Style="margin-top: 0.5em;"></FormInput>
        </LotusForm>
    </div>
</UserNotAuthenticated>

<UserAuthenticated>
    <h1>Welcum</h1>
</UserAuthenticated>

@inject Blazored.LocalStorage.ILocalStorageService localStorage
@code {
    private string Email { get; set; }
    private string UserName { get; set; }
    private string Password { get; set; }
    private string ErrorMessage = "";
    private string Wiggle = "";

    private void Reroute() => NavManager.NavigateTo("");

    private async Task InitiateWiggle()
    {
        Wiggle = "wiggle";
        ErrorMessage = "Invalid email, username or password";
        await Task.Delay(500);
        Wiggle = "";
    }

    private async Task Authenticate()
    {
        try
        {
            string sha1Pass = SHA1Hash.Hash(Password);
            User user = DbHandler.GetUser(UserName, Email, sha1Pass);
            await Session.Login();
        }
        catch(UserNotFoundException)
        {
            await InitiateWiggle();
        }
        catch(ArgumentNullException)
        {
            await InitiateWiggle();
        }
    }
}
