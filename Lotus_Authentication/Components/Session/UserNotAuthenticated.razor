@implements IDisposable
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject UserSessionManager Session

@if (!IsAuthenticated)
{
	@ChildContent
}

@namespace Lotus_Authentication.Components
@code 
{
    [Parameter] public RenderFragment ChildContent { get; set; }
    protected bool IsAuthenticated { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(!firstRender)
            return;
        Session.SessionHasChangedEvent += CheckAuthentication;
        await CheckAuthentication("loggedIn");
    }

    private async Task CheckAuthentication(string key)
    {
        if(key == "loggedIn")
        {
            IsAuthenticated = await Session.IsLoggedIn();
            StateHasChanged();    
        }
    }

    public void Dispose()
    {
        Session.SessionHasChangedEvent -= CheckAuthentication;
    }
}