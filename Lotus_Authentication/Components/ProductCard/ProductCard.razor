<div class="component-base m-3 @_ComponentClass @_HoverShadow @Class" 
	@onmouseover="OnHover"
	@onmouseout="OnHoverRemove" 
	style="@Style">

	<a class="link-box" href="@Href">
		<div class="d-flex flex-row justify-content-between align-items-center">
			<h2 class="mx-2">@Title</h2>
			<div class="mx-1 d-flex flex-row">
				@for(int i = 0; i < Stars; i++)
				{
					<StarRating Filled="true"/>
				}
				@for(int i = 0; i < 5 - Stars; i++)
				{
					<StarRating Filled="false"/>
				}
			</div>
		</div>
		<div class="img-container">
			<img src="@ImgSrc" />
		</div>
		<p class="p-2">@_Description</p>
	</a>
	
	<div class="bottom-box">
		<button class="btn btn-info">Add to cart</button>
	</div>
</div>


@code {
	[Parameter] public string? Class { get; set; }
	[Parameter] public string? Style { get; set; }
	[Parameter] public string? Href { get; set; }
	[Parameter, EditorRequired] public string Title { get; set; }
	[Parameter, EditorRequired] public string ImgSrc { get; set; }
	[Parameter] public string Description { get; set; }
	[Parameter] public PictureCardVariant? Variant { get; set; }
	[Parameter] public int Stars { get; set; }

	private string _HoverShadow = "b-shadow";
	private bool _HasHyperLink = false;
	private string _ComponentClass = "component-base";
	private string _Description = "";

	private void OnHover() => _HoverShadow = "b-shadow-lg-blue";
	private void OnHoverRemove() => _HoverShadow = "b-shadow";

	protected override void OnInitialized()
	{
		if(Description.Length > 160)
		{
			_Description = Description.Substring(0, 160) + "...";
		}

		_ComponentClass = Variant switch
		{
			PictureCardVariant.Medium => "component-medium",
			PictureCardVariant.Small => "component-small",
			_ => "component-medium"
		};
		_HasHyperLink = !string.IsNullOrWhiteSpace(Href);
	}
}
